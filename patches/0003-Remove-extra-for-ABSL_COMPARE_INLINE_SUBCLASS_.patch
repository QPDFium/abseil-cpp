From 8ab834b3924f8b1c295847542c1180ec536165b6 Mon Sep 17 00:00:00 2001
From: Alex Chau <alexchau@chromium.org>
Date: Thu, 27 Aug 2020 16:21:27 +0100
Subject: [PATCH] Remove extra ; for ABSL_COMPARE_INLINE_SUBCLASS_DECL

---
 third_party/abseil-cpp/absl/types/compare.h | 37 ++++++++++-----------
 1 file changed, 18 insertions(+), 19 deletions(-)

diff --git a/third_party/abseil-cpp/absl/types/compare.h b/third_party/abseil-cpp/absl/types/compare.h
index 62ca70f9a704..afe5a7c1d2c6 100644
--- a/third_party/abseil-cpp/absl/types/compare.h
+++ b/third_party/abseil-cpp/absl/types/compare.h
@@ -88,8 +88,7 @@ enum class ncmp : value_type { unordered = -127 };

 #define ABSL_COMPARE_INLINE_BASECLASS_DECL(name)

-#define ABSL_COMPARE_INLINE_SUBCLASS_DECL(type, name) \
-  static const type name
+#define ABSL_COMPARE_INLINE_SUBCLASS_DECL(type, name) static const type name;

 #define ABSL_COMPARE_INLINE_INIT(type, name, init) \
   inline constexpr type type::name(init)
@@ -156,8 +155,8 @@ class weak_equality
   friend struct compare_internal::weak_equality_base<weak_equality>;

  public:
-  ABSL_COMPARE_INLINE_SUBCLASS_DECL(weak_equality, equivalent);
-  ABSL_COMPARE_INLINE_SUBCLASS_DECL(weak_equality, nonequivalent);
+  ABSL_COMPARE_INLINE_SUBCLASS_DECL(weak_equality, equivalent)
+  ABSL_COMPARE_INLINE_SUBCLASS_DECL(weak_equality, nonequivalent)

   // Comparisons
   friend constexpr bool operator==(
@@ -200,10 +199,10 @@ class strong_equality
   friend struct compare_internal::strong_equality_base<strong_equality>;

  public:
-  ABSL_COMPARE_INLINE_SUBCLASS_DECL(strong_equality, equal);
-  ABSL_COMPARE_INLINE_SUBCLASS_DECL(strong_equality, nonequal);
-  ABSL_COMPARE_INLINE_SUBCLASS_DECL(strong_equality, equivalent);
-  ABSL_COMPARE_INLINE_SUBCLASS_DECL(strong_equality, nonequivalent);
+  ABSL_COMPARE_INLINE_SUBCLASS_DECL(strong_equality, equal)
+  ABSL_COMPARE_INLINE_SUBCLASS_DECL(strong_equality, nonequal)
+  ABSL_COMPARE_INLINE_SUBCLASS_DECL(strong_equality, equivalent)
+  ABSL_COMPARE_INLINE_SUBCLASS_DECL(strong_equality, nonequivalent)

   // Conversion
   constexpr operator weak_equality() const noexcept {  // NOLINT
@@ -263,10 +262,10 @@ class partial_ordering
   }

  public:
-  ABSL_COMPARE_INLINE_SUBCLASS_DECL(partial_ordering, less);
-  ABSL_COMPARE_INLINE_SUBCLASS_DECL(partial_ordering, equivalent);
-  ABSL_COMPARE_INLINE_SUBCLASS_DECL(partial_ordering, greater);
-  ABSL_COMPARE_INLINE_SUBCLASS_DECL(partial_ordering, unordered);
+  ABSL_COMPARE_INLINE_SUBCLASS_DECL(partial_ordering, less)
+  ABSL_COMPARE_INLINE_SUBCLASS_DECL(partial_ordering, equivalent)
+  ABSL_COMPARE_INLINE_SUBCLASS_DECL(partial_ordering, greater)
+  ABSL_COMPARE_INLINE_SUBCLASS_DECL(partial_ordering, unordered)

   // Conversion
   constexpr operator weak_equality() const noexcept {  // NOLINT
@@ -351,9 +350,9 @@ class weak_ordering
   friend struct compare_internal::weak_ordering_base<weak_ordering>;

  public:
-  ABSL_COMPARE_INLINE_SUBCLASS_DECL(weak_ordering, less);
-  ABSL_COMPARE_INLINE_SUBCLASS_DECL(weak_ordering, equivalent);
-  ABSL_COMPARE_INLINE_SUBCLASS_DECL(weak_ordering, greater);
+  ABSL_COMPARE_INLINE_SUBCLASS_DECL(weak_ordering, less)
+  ABSL_COMPARE_INLINE_SUBCLASS_DECL(weak_ordering, equivalent)
+  ABSL_COMPARE_INLINE_SUBCLASS_DECL(weak_ordering, greater)

   // Conversions
   constexpr operator weak_equality() const noexcept {  // NOLINT
@@ -441,10 +440,10 @@ class strong_ordering
   friend struct compare_internal::strong_ordering_base<strong_ordering>;

  public:
-  ABSL_COMPARE_INLINE_SUBCLASS_DECL(strong_ordering, less);
-  ABSL_COMPARE_INLINE_SUBCLASS_DECL(strong_ordering, equal);
-  ABSL_COMPARE_INLINE_SUBCLASS_DECL(strong_ordering, equivalent);
-  ABSL_COMPARE_INLINE_SUBCLASS_DECL(strong_ordering, greater);
+  ABSL_COMPARE_INLINE_SUBCLASS_DECL(strong_ordering, less)
+  ABSL_COMPARE_INLINE_SUBCLASS_DECL(strong_ordering, equal)
+  ABSL_COMPARE_INLINE_SUBCLASS_DECL(strong_ordering, equivalent)
+  ABSL_COMPARE_INLINE_SUBCLASS_DECL(strong_ordering, greater)

   // Conversions
   constexpr operator weak_equality() const noexcept {  // NOLINT
--
2.28.0.297.g1956fa8f8d-goog
